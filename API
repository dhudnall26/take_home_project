# importing requests for http communication and mysql.connector for connection to sql database
import requests
import mysql.connector
from flask import Flask, request
from flask_restful import Resource, Api
from sqlalchemy import create_engine
import json
from json import dumps

# requesting login information from user for sql database (so username and password is not displayed in program)
host_value = input("Enter the host name:")
port_number = input("Enter the port number:")
database_value = input("Enter the database/schema:")
user_name = input("Enter your username:")
password = input("Enter your password:")

#connecting to sql database
mydb = mysql.connector.connect(
    host = host_value,
    port = port_number,
    user = user_name,
    password = password,
    database = database_value
    )
    
class MealCheck():
    def get(self):
        # parsing GET request to obtain data needed for search in SQL  
        get_request = "/menu/2021-03-08/MEAL_KIT"
        year = int(get_request[6:10])
        month = int(get_request[11:13])
        day = int(get_request[14:16])
        type_meal = (get_request[17:25])
        week_id_no = 0
        meal_id_no = []
        meal_names = []

        # Finding the week id number based on the date input and the range in which it falls
        mycursor7 = mydb.cursor()
        mycursor7.execute("SELECT start_date, end_date, id FROM week")
        for a in mycursor7:
            x = str(a[0]) + str(a[1]) + str(a[2])
            x = x.replace("(","")
            x = x.replace(")","")
            x = x.replace(".","")
            x = x.replace(" ","")
            x = x.replace(",","")
            x = x.replace("-","")
            x = x.replace("datetimedate","")
            if ((year >= int(x[0:4])) and (year <= int(x[8:12]))):
                if ((month >= int(x[4:6])) and (month <= int(x[12:14]))):
                    if((day >= int(x[6:8])) and ((day <= int(x[14:16]) or ((month == int(x[4:6])) and (month < int(x[12:14])))))):
                        week_id_no = x[16:20]


        # Finding meal id numbers associated with the identified week id number
        mycursor8 = mydb.cursor()
        mycursor8.execute("SELECT week_id, meal_id FROM meal_week")
        for a in mycursor8:
            if str(a[0]) == str(week_id_no):
                meal_id_no.append(a[1])

        # Finding meals associated with the identified meal id numbers and input meal type
        mycursor9 = mydb.cursor()
        mycursor9.execute("SELECT id, name, type FROM meal")
        for a in mycursor9:
          if (a[0] in meal_id_no) and (str(a[2]) == str(type_meal)):
              meal_names.append(a[1])
        print(json.dumps(meal_names))
      
